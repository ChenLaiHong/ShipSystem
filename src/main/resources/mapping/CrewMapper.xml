<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.dao.CrewMapper">
  <resultMap id="BaseResultMap" type="com.lh.pojo.Crew">
    <id column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="household_register" jdbcType="VARCHAR" property="householdRegister" />
    <result column="static_live" jdbcType="INTEGER" property="staticLive" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />

    <association property="role" column="role_id" select="com.lh.dao.RoleMapper.selectByPrimaryKey" javaType="com.lh.pojo.Role">
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    login_id, name, password, gender, phone, birth, email, household_register, static_live, 
    role_id
  </sql>
  <select id="selectByExample" parameterType="com.lh.pojo.CrewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crew
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crew
    where login_id = #{loginId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from crew
    where login_id = #{loginId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lh.pojo.CrewExample">
    delete from crew
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lh.pojo.Crew">
    insert into crew (login_id, name, password, 
      gender, phone, birth, 
      email, household_register, static_live, 
      role_id)
    values (#{loginId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{birth,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{householdRegister,jdbcType=VARCHAR}, #{staticLive,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lh.pojo.Crew">
    insert into crew
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        login_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="householdRegister != null">
        household_register,
      </if>
      <if test="staticLive != null">
        static_live,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="householdRegister != null">
        #{householdRegister,jdbcType=VARCHAR},
      </if>
      <if test="staticLive != null">
        #{staticLive,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lh.pojo.CrewExample" resultType="java.lang.Long">
    select count(*) from crew
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update crew
    <set>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.householdRegister != null">
        household_register = #{record.householdRegister,jdbcType=VARCHAR},
      </if>
      <if test="record.staticLive != null">
        static_live = #{record.staticLive,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update crew
    set login_id = #{record.loginId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      household_register = #{record.householdRegister,jdbcType=VARCHAR},
      static_live = #{record.staticLive,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lh.pojo.Crew">
    update crew
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="householdRegister != null">
        household_register = #{householdRegister,jdbcType=VARCHAR},
      </if>
      <if test="staticLive != null">
        static_live = #{staticLive,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lh.pojo.Crew">
    update crew
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      household_register = #{householdRegister,jdbcType=VARCHAR},
      static_live = #{staticLive,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where login_id = #{loginId,jdbcType=VARCHAR}
  </update>


  <select id="list" parameterType="Map" resultMap="BaseResultMap">
    select * from crew
    <where>
      <if test="q!=null and q!=''">
        and (name like #{q}  or household_register like #{q})
      </if>
      and role_id != #{roleId}
    </where>
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

  <select id="getTotal" parameterType="Map" resultType="Integer">
    select
    count(*) from crew
    <where>
      <if test="q!=null and q!=''">
        and (name like #{q}  or household_register like #{q})
      </if>
      and role_id != #{roleId}
    </where>
  </select>

  <!-- 批量插入-->

  <insert id="inputAll" parameterType="java.util.Map">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into crew
    (login_id,name,password,gender,role_id)
    values
    <foreach collection="crewList" item="item" index="index" separator=",">
      (
      #{item.loginId},#{item.name},#{password},#{item.gender},
      #{roleId}
      )
    </foreach>
  </insert>
</mapper>