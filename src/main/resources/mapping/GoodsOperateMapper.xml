<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.dao.GoodsOperateMapper">
  <resultMap id="BaseResultMap" type="com.lh.pojo.GoodsOperate">
    <id column="operate_id" jdbcType="INTEGER" property="operateId" />
    <result column="operate_type" jdbcType="INTEGER" property="operateType" />
    <result column="bearing_weight" jdbcType="DECIMAL" property="bearingWeight" />
    <result column="operate_price" jdbcType="DECIMAL" property="operatePrice" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ship_id" jdbcType="INTEGER" property="shipId" />
    <association property="shipInfo" column="ship_id" select="com.lh.dao.ShipInfoMapper.selectByPrimaryKey" javaType="com.lh.pojo.ShipInfo">
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    operate_id, operate_type, bearing_weight, operate_price, state, update_time, ship_id
  </sql>
  <select id="selectByExample" parameterType="com.lh.pojo.GoodsOperateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goodsoperate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goodsoperate
    where operate_id = #{operateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goodsoperate
    where operate_id = #{operateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lh.pojo.GoodsOperateExample">
    delete from goodsoperate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lh.pojo.GoodsOperate">
    insert into goodsoperate (operate_id, operate_type, bearing_weight, 
      operate_price, state, update_time, 
      ship_id)
    values (#{operateId,jdbcType=INTEGER}, #{operateType,jdbcType=INTEGER}, #{bearingWeight,jdbcType=DECIMAL}, 
      #{operatePrice,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{shipId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lh.pojo.GoodsOperate">
    insert into goodsoperate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="operateType != null">
        operate_type,
      </if>
      <if test="bearingWeight != null">
        bearing_weight,
      </if>
      <if test="operatePrice != null">
        operate_price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="shipId != null">
        ship_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operateId != null">
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=INTEGER},
      </if>
      <if test="bearingWeight != null">
        #{bearingWeight,jdbcType=DECIMAL},
      </if>
      <if test="operatePrice != null">
        #{operatePrice,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipId != null">
        #{shipId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lh.pojo.GoodsOperateExample" resultType="java.lang.Long">
    select count(*) from goodsoperate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goodsoperate
    <set>
      <if test="record.operateId != null">
        operate_id = #{record.operateId,jdbcType=INTEGER},
      </if>
      <if test="record.operateType != null">
        operate_type = #{record.operateType,jdbcType=INTEGER},
      </if>
      <if test="record.bearingWeight != null">
        bearing_weight = #{record.bearingWeight,jdbcType=DECIMAL},
      </if>
      <if test="record.operatePrice != null">
        operate_price = #{record.operatePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shipId != null">
        ship_id = #{record.shipId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goodsoperate
    set operate_id = #{record.operateId,jdbcType=INTEGER},
      operate_type = #{record.operateType,jdbcType=INTEGER},
      bearing_weight = #{record.bearingWeight,jdbcType=DECIMAL},
      operate_price = #{record.operatePrice,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      ship_id = #{record.shipId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lh.pojo.GoodsOperate">
    update goodsoperate
    <set>
      <if test="operateType != null">
        operate_type = #{operateType,jdbcType=INTEGER},
      </if>
      <if test="bearingWeight != null">
        bearing_weight = #{bearingWeight,jdbcType=DECIMAL},
      </if>
      <if test="operatePrice != null">
        operate_price = #{operatePrice,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipId != null">
        ship_id = #{shipId,jdbcType=INTEGER},
      </if>
    </set>
    where operate_id = #{operateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lh.pojo.GoodsOperate">
    update goodsoperate
    set operate_type = #{operateType,jdbcType=INTEGER},
      bearing_weight = #{bearingWeight,jdbcType=DECIMAL},
      operate_price = #{operatePrice,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ship_id = #{shipId,jdbcType=INTEGER}
    where operate_id = #{operateId,jdbcType=INTEGER}
  </update>


  <select id="list" parameterType="Map" resultMap="BaseResultMap">
    select * from goodsoperate
    <where>
      <if test="q!=null and q!=''">
        and (bearing_weight like #{q}  or operate_price like #{q})
      </if>
      and  state = 1
    </where>
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

  <select id="getTotal" parameterType="Map" resultType="Integer">
    select
    count(*) from goodsoperate
    <where>
      <if test="q!=null and q!=''">
        and (bearing_weight like #{q}  or operate_price like #{q})
      </if>
      and state = 1
    </where>
  </select>

  <!-- 批量插入

  <insert id="inputAll" parameterType="java.util.Map">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goodsoperate
    (eid, poisson_ratio, elastic_modulus,
    equipment_model, equipment_price, ship_id, update_time)
    values
    <foreach collection="equipmentList" item="item" index="index" separator=",">
      (
      #{item.eid},#{item.poissonRatio},#{item.elasticModulus},#{item.equipmentModel},#{item.equipmentPrice},
      #{shipId},now()
      )
    </foreach>
  </insert>
-->

  <!--批量修改，逻辑删除
   1、这里修改的是某个字段的值，参数是int类型的集合
  2、如果你的是对象的集合，item.字段名 赋值就好了
  -->


  <update id="updateList" parameterType="java.util.List" >
    UPDATE goodsoperate SET
    state = 0
    WHERE operate_id in
    <foreach collection="list" open="(" close=")" item="id" separator=",">
      #{id}
    </foreach>
  </update>
</mapper>