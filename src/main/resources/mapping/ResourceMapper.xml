<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.lh.pojo.Resource">
    <id column="resoure_id" jdbcType="INTEGER" property="resoureId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="resoure_url" jdbcType="VARCHAR" property="resoureUrl" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
    <result column="resource_parent_id" jdbcType="INTEGER" property="resourceParentId" />
    <result column="resource_sort" jdbcType="INTEGER" property="resourceSort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resoure_id, name, resoure_url, resource_type, resource_parent_id, resource_sort
  </sql>
  <select id="selectByExample" parameterType="com.lh.pojo.ResourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from resource
    where resoure_id = #{resoureId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resource
    where resoure_id = #{resoureId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lh.pojo.ResourceExample">
    delete from resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lh.pojo.Resource">
    insert into resource (resoure_id, name, resoure_url,
    resource_type, resource_parent_id, resource_sort
    )
    values (#{resoureId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{resoureUrl,jdbcType=VARCHAR},
    #{resourceType,jdbcType=INTEGER}, #{resourceParentId,jdbcType=INTEGER}, #{resourceSort,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.lh.pojo.Resource">
    insert into resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resoureId != null">
        resoure_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="resoureUrl != null">
        resoure_url,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="resourceParentId != null">
        resource_parent_id,
      </if>
      <if test="resourceSort != null">
        resource_sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resoureId != null">
        #{resoureId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="resoureUrl != null">
        #{resoureUrl,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="resourceParentId != null">
        #{resourceParentId,jdbcType=INTEGER},
      </if>
      <if test="resourceSort != null">
        #{resourceSort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lh.pojo.ResourceExample" resultType="java.lang.Long">
    select count(*) from resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resource
    <set>
      <if test="record.resoureId != null">
        resoure_id = #{record.resoureId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.resoureUrl != null">
        resoure_url = #{record.resoureUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=INTEGER},
      </if>
      <if test="record.resourceParentId != null">
        resource_parent_id = #{record.resourceParentId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceSort != null">
        resource_sort = #{record.resourceSort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resource
    set resoure_id = #{record.resoureId,jdbcType=INTEGER},
    name = #{record.name,jdbcType=VARCHAR},
    resoure_url = #{record.resoureUrl,jdbcType=VARCHAR},
    resource_type = #{record.resourceType,jdbcType=INTEGER},
    resource_parent_id = #{record.resourceParentId,jdbcType=INTEGER},
    resource_sort = #{record.resourceSort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lh.pojo.Resource">
    update resource
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="resoureUrl != null">
        resoure_url = #{resoureUrl,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="resourceParentId != null">
        resource_parent_id = #{resourceParentId,jdbcType=INTEGER},
      </if>
      <if test="resourceSort != null">
        resource_sort = #{resourceSort,jdbcType=INTEGER},
      </if>
    </set>
    where resoure_id = #{resoureId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lh.pojo.Resource">
    update resource
    set name = #{name,jdbcType=VARCHAR},
      resoure_url = #{resoureUrl,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=INTEGER},
      resource_parent_id = #{resourceParentId,jdbcType=INTEGER},
      resource_sort = #{resourceSort,jdbcType=INTEGER}
    where resoure_id = #{resoureId,jdbcType=INTEGER}
  </update>

  <select id="loadPersonResources" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT re.resoure_id,re.name,re.resource_parent_id,re.resoure_url
    FROM resource re LEFT JOIN role_resource rr
    ON re.resoure_id = rr.resoure_id
    WHERE rr.role_id=#{roleId}
    ORDER BY re.resource_sort ASC
  </select>


  <select id="queryResourcesListWithSelected" parameterType="int" resultMap="BaseResultMap">
    SELECT re.resoure_id,re.name,re.resource_parent_id,re.resoure_url,re.resource_type,
    (CASE WHEN EXISTS(SELECT 1
    FROM role_resource rr WHERE rr.resoure_id=re.resoure_id AND rr.role_id=#{rid})
    THEN 'true' ELSE 'false' END) AS checked
    FROM resource re
    WHERE re.resource_parent_id !=0
    ORDER BY re.resource_sort ASC
  </select>
</mapper>